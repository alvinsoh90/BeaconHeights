package com.lin.entities;
// Generated Feb 7, 2013 9:01:41 PM by Hibernate Tools 3.2.1.GA


import com.lin.utils.GeneralFunctions;
import java.text.ParseException;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Post generated by hbm2java
 */
public class Post  implements java.io.Serializable {
    
     public enum Type {
         INVITE,SHOUTOUT,REQUEST,ANNOUNCEMENT;
     }

     private int postId;
     private User user;
     private String message;
     private Date date;
     private Integer noOfLikes;
     private String title;
     private String category;
     private Boolean isInappropriate;
     private Integer eventId;
     private Set comments = new HashSet(0);

    public Post() {
    }

    private String getCategoryStringFromType(Type type){
        if(type == type.ANNOUNCEMENT){
            return "ANNOUNCEMENT";
        }
        else if(type == type.INVITE){
            return "INVITE";
        }
        else if(type == type.REQUEST){
            return "REQUEST";
        }
        else if(type == type.SHOUTOUT){
            return "SHOUTOUT";
        }
        return null;
    }
	
    public Post(int postId, User user) {
        this.postId = postId;
        this.user = user;
    }
    public Post(int postId, User user, String message, Date date, Integer noOfLikes, String title, String category, Boolean isInappropriate, Integer eventId, Set comments) {
       this.postId = postId;
       this.user = user;
       this.message = message;
       this.date = date;
       this.noOfLikes = noOfLikes;
       this.title = title;
       this.category = category;
       this.isInappropriate = isInappropriate;
       this.eventId = eventId;
       this.comments = comments;
    }
    
    // constr for making a new post
    public Post(User user, String message, Date date, String title, Type category){
       this.user = user;
       this.message = message;
       this.date = date;
       this.noOfLikes = noOfLikes;
       this.title = title;
       this.category = getCategoryStringFromType(category);
       this.isInappropriate = false;
       this.eventId = null;
       this.comments = null;
    }
   
    public int getPostId() {
        return this.postId;
    }
    
    public void setPostId(int postId) {
        this.postId = postId;
    }
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }
    public String getMessage() {
        return this.message;
    }
    
    public void setMessage(String message) {
        this.message = message;
    }
    public Date getPostedDate() {
        return this.date;
    }
    
    public void setPostedDate(Date date) {
        this.date = date;
    }
    public Integer getNoOfLikes() {
        return this.noOfLikes;
    }
    
    public void setNoOfLikes(Integer noOfLikes) {
        this.noOfLikes = noOfLikes;
    }
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    public String getCategory() {
        return this.category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }
    public Boolean getIsInappropriate() {
        return this.isInappropriate;
    }
    
    public void setIsInappropriate(Boolean isInappropriate) {
        this.isInappropriate = isInappropriate;
    }
    public Integer getEventId() {
        return this.eventId;
    }
    
    public void setEventId(Integer eventId) {
        this.eventId = eventId;
    }
    @Fetch(FetchMode.JOIN)
    public Set getComments() {
        return this.comments;
    }
    @Fetch(FetchMode.JOIN)
    public void setComments(Set comments) {
        this.comments = comments;
    }

    public String getTimeSincePost(){
        try {
            return GeneralFunctions.getTimeSinceString(date);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        return "moments ago";
    }


}


