package com.lin.entities;
// Generated Feb 22, 2013 4:39:59 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;

/**
 * Notification generated by hbm2java
 */
public class Notification  implements java.io.Serializable {

    public enum Type{
        EVENTCREATED,FRIENDREQUEST,JOINEDEVENT,EVENTCOMMENT,POSTCOMMENT,TAGGEDINPOST,EVENTINVITE
    }

     private Integer id;
     private Date timestamp;
     private Event event;
     private User userBySenderId;
     private Post post;
     private User userByReceiverId;
     private String type;
     private boolean hasBeenViewed;
     private Type notificationEnumType;

    public Notification() {
    }

	
    public Notification(User userBySenderId, User userByReceiverId, String type) {
        this.userBySenderId = userBySenderId;
        this.userByReceiverId = userByReceiverId;
        this.type = type;
        this.notificationEnumType = getTypeFromCategoryString(type);
    }
    public Notification(Event event, User userBySenderId, Post post, User userByReceiverId, String type) {
       this.event = event;
       this.userBySenderId = userBySenderId;
       this.post = post;
       this.userByReceiverId = userByReceiverId;
       this.type = type;
       this.notificationEnumType = getTypeFromCategoryString(type);
    }
    
    //Constr for EVENTCREATED,EVENTINVITE,EVENTCOMMENT,JOINEDEVENT  Notification
    public Notification(User eventCreator, Event event, User receipient, Type t, Date d){
       this.event = event;
       this.userBySenderId = eventCreator;
       this.userByReceiverId = receipient;
       this.type = getCategoryStringFromType(t);
       this.notificationEnumType = t;
       this.timestamp = d;
    }
    //Constr for FRIENDREQUEST
    public Notification(User joinedUser, User receipient, Type t, Date d){
       this.userBySenderId = joinedUser;
       this.userByReceiverId = receipient;
       this.type = getCategoryStringFromType(t);
       this.notificationEnumType = t;
       this.timestamp = d;
    }
    //Constr for POSTCOMMENT, TAGGEDINPOST
    public Notification(User commenter, User receipient, Post p, Type t, Date d){
       this.userBySenderId = commenter;
       this.userByReceiverId = receipient;
       this.post = p;
       this.type = getCategoryStringFromType(t);
       this.notificationEnumType = t;
       this.timestamp = d;
    }
    
    private String getCategoryStringFromType(Type type){
        if(type == type.EVENTCOMMENT){
            return "EVENTCOMMENT";
        }
        else if(type == type.EVENTINVITE){
            return "INVITATION";
        }
        else if(type == type.POSTCOMMENT){
            return "POSTCOMMENT";
        }
        else if(type == type.EVENTCREATED){
            return "EVENTCREATED";
        }
        else if(type == type.FRIENDREQUEST){
            return "FRIENDREQUEST";
        }
        else if(type == type.JOINEDEVENT){
            return "JOINEDEVENT";
        }
        else if(type == type.TAGGEDINPOST){
            return "TAGGEDINPOST";
        }
        return null;
    }
    
    private Type getTypeFromCategoryString(String category) {
        if(category.equals("EVENTCOMMENT")){
            return Type.EVENTCOMMENT;
        }
        else if(category.equals("EVENTINVITE")){
            return Type.EVENTINVITE;
        }
        else if (category.equals("POSTCOMMENT")){
            return Type.POSTCOMMENT;
        }
        else if (category.equals("EVENTCREATED")){
            return Type.EVENTCREATED;
        }   
        else if (category.equals("FRIENDREQUEST")){
            return Type.FRIENDREQUEST;
        }   
        else if (category.equals("JOINEDEVENT")){
            return Type.JOINEDEVENT;
        } 
        else if (category.equals("TAGGEDINPOST")){
            return Type.TAGGEDINPOST;
        }   
        return null;
    }

    public boolean isHasBeenViewed() {
        return hasBeenViewed;
    }

    public void setHasBeenViewed(boolean hasBeenViewed) {
        this.hasBeenViewed = hasBeenViewed;
    }
    
    public Type getNotificationEnumType() {
        return notificationEnumType;
    }

    public void setNotificationEnumType(Type notificationEnumType) {
        this.notificationEnumType = notificationEnumType;
    }
    
    
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Date getTimestamp() {
        return this.timestamp;
    }
    
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }
    public Event getEvent() {
        return this.event;
    }
    
    public void setEvent(Event event) {
        this.event = event;
    }
    public User getUserBySenderId() {
        return this.userBySenderId;
    }
    
    public void setUserBySenderId(User userBySenderId) {
        this.userBySenderId = userBySenderId;
    }
    public Post getPost() {
        return this.post;
    }
    
    public void setPost(Post post) {
        this.post = post;
    }
    public User getUserByReceiverId() {
        return this.userByReceiverId;
    }
    
    public void setUserByReceiverId(User userByReceiverId) {
        this.userByReceiverId = userByReceiverId;
    }
    public String getType() {
        return this.type;
    }
    
    public void setType(String type) {
        this.type = type;
    }




}


